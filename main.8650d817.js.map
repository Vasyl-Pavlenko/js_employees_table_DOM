{"version":3,"sources":["scripts/main.js"],"names":["header","document","querySelector","body","notifTimeout","lengthName","ageMin","ageMax","employeeForm","createElement","classList","add","insertAdjacentHTML","append","cIndex","sortingTable","index","nameColumn","directSorting","sortTable","children","sort","first","second","a","innerHTML","b","localeCompare","toNumber","reverse","string","res","includes","slice","split","join","Number","addEventListener","e","target","cellIndex","forEach","row","remove","parentElement","isValid","startNotification","title","description","type","possTop","possRight","mainBody","blockNot","headerNot","textNot","setAttribute","style","fontSize","top","right","setTimeout","onFocusInvalidForm","field","firstElementChild","outlineColor","focus","validateForm","data","get","trim","length","test","FormData","numberToSalary","toLocaleString","preventDefault","newRow","insertRow","insertCell","innerText","reset","validCell","indexCompare","isThereInput","changeOnInput","prev","cellWidth","getComputedStyle","width","value","parseFloat","editCells","el","newText","validateCells","input","getValidCells","border","saveChangesOnTable","targetCell","closest","push","prevText","ev","key","blur"],"mappings":";AAAA,aAsVA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EApVA,IAAMA,EAASC,SAASC,cAAc,SAChCC,EAAOF,SAASC,cAAc,SAC9BE,EAAe,IACfC,EAAa,EACbC,EAAS,GACTC,EAAS,GACTC,EAAeP,SAASQ,cAAc,QAE5CD,EAAaE,UAAUC,IAAI,qBAE3BH,EAAaI,mBAAmB,aAAhC,i0BA0BAX,SAASE,KAAKU,OAAOL,GAErB,IAAIM,GAAU,EAWd,SAASC,EAAaC,EAAOC,EAAYC,GACjCC,IAAAA,EAAgBhB,EAAAA,EAAKiB,UAE3BD,EAAUE,KAAK,SAACC,EAAOC,GACfC,IAAAA,EAAIF,EAAMF,SAASJ,GAAOS,UAC1BC,EAAIH,EAAOH,SAASJ,GAAOS,UAEzBR,OAAAA,GACD,IAAA,OACA,IAAA,WACA,IAAA,SACIO,OAAAA,EAAEG,cAAcD,GAEpB,IAAA,MACA,IAAA,SACIE,OAAAA,EAASJ,GAAKI,EAASF,MAIhCR,GACFC,EAAUU,UAGZ1B,EAAKU,OAALV,MAAAA,EAAegB,EAAAA,IAGjB,SAASS,EAASE,GACVC,IAAAA,EAAMD,EAAOE,SAAS,KACxBF,EAAOG,MAAM,GAAGC,MAAM,KAAKC,KAAK,IAChCL,EAEGM,OAAAA,OAAOL,GAxChB/B,EAAOqC,iBAAiB,QAAS,SAACC,GAC1BC,IAAAA,EAASD,EAAEC,OACXvB,EAAQuB,EAAOC,UAErBzB,EAAaC,EAAOuB,EAAOd,UAAWX,IAAWE,GAEjDF,EAAUA,IAAWE,GAAU,EAAIA,IAqCrCb,EAAKkC,iBAAiB,QAAS,SAACC,GAC1BnC,EAAAA,EAAKiB,UAAUqB,QAAQ,SAAAC,GACzBA,EAAIhC,UAAUiC,OAAO,YAGvBL,EAAEC,OAAOK,cAAclC,UAAUC,IAAI,YAGvC,IAAIkC,GAAU,EAERC,EAAoB,SAACC,EAAOC,EAAaC,GAC7CC,IAAAA,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,IAAKC,EAAY,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,IACrBC,EAAWnD,SAASC,cAAc,QAClCmD,EAAWpD,SAASQ,cAAc,OAClC6C,EAAYrD,SAASQ,cAAc,MACnC8C,EAAUtD,SAASQ,cAAc,KAEvC8C,EAAQ9B,UAAYuB,EACpBM,EAAU7B,UAAYsB,EACtBM,EAAS3C,UAAUC,IAAI,eAAgBsC,GACvCI,EAASG,aAAa,UAAW,gBACjCF,EAAU5C,UAAUC,IAAI,UAExB0C,EAASxC,OAAOyC,EAAWC,GAC3BH,EAASvC,OAAOwC,GAEhBC,EAAUG,MAAMC,SAAW,OAC3BL,EAASI,MAAME,IAAST,GAAAA,OAAAA,EAAxB,MACAG,EAASI,MAAMG,MAAWT,GAAAA,OAAAA,EAA1B,MAEAU,WAAW,WAAMR,OAAAA,EAASV,UAAUvC,IAGhC0D,EAAqB,SAACC,GAC1BvD,EAAaY,SAAS2C,GAAOC,kBAC1B3B,iBAAiB,QAAS,SAACC,GAC1BA,EAAEC,OAAOkB,MAAMQ,aAAe,SAGlCzD,EAAaY,SAAS2C,GAAOG,SAGzBC,EAAe,SAACC,GAChBA,EAAKC,IAAI,QAAQC,OAAOC,OAASlE,GAChC,KAAKmE,KAAKJ,EAAKC,IAAI,UACtBP,EAAmB,GAEnBhB,EACE,sBACA,sEACA,SAGFD,GAAU,GACsB,OAAvBuB,EAAKC,IAAI,WAClBP,EAAmB,GAEnBhB,EACE,wBACA,2BACA,SAGFD,GAAU,GAC+B,KAAhCuB,EAAKC,IAAI,YAAYC,QAC9BR,EAAmB,GAEnBhB,EACE,0BACA,6BACA,SAGFD,GAAU,GACDuB,EAAKC,IAAI,OAAS/D,GAAU8D,EAAKC,IAAI,OAAS9D,GACvDuD,EAAmB,GAEnBhB,EACE,qBACgCxC,gCAAAA,OAAAA,EAAwBC,mBAAAA,OAAAA,GACxD,SAGFsC,GAAU,GACsB,KAAvBuB,EAAKC,IAAI,WAAoBD,EAAKC,IAAI,WAAa,GAC5DP,EAAmB,GAEnBhB,EACE,wBACA,gCACA,SAGFD,GAAU,GAEVA,GAAU,GAIdrC,EAAa6B,iBAAiB,SAAU,SAACC,GACjC8B,IAAAA,EAAO,IAAIK,SAASjE,GACpBkE,EAAqBtC,IAAAA,OAAAA,OAAOgC,EAAKC,IAAI,WACxCM,eAAe,UAKd,GAHJrC,EAAEsC,iBACFT,EAAaC,GAERvB,EAAD,CAIEgC,IAAAA,EAAS1E,EAAK2E,YAEpBD,EAAOE,WAAW,GAAGC,UAAYZ,EAAKC,IAAI,QAC1CQ,EAAOE,WAAW,GAAGC,UAAYZ,EAAKC,IAAI,YAC1CQ,EAAOE,WAAW,GAAGC,UAAYZ,EAAKC,IAAI,UAC1CQ,EAAOE,WAAW,GAAGC,UAAYZ,EAAKC,IAAI,OAC1CQ,EAAOE,WAAW,GAAGC,UAAYN,EAEjClE,EAAayE,QAEbnC,EACE,qBACA,kCACA,cAIJ,IACIoC,EADEC,EAAe,GAEjBC,GAAe,EAEbC,EAAgB,SAAC/C,EAAGgD,GACpBC,IAAAA,EAAYC,iBAAiBlD,EAAEC,QAAQkD,MAEnCnD,OAAAA,EAAEC,OAAOC,WACV,KAAA,EACA,KAAA,EACHF,EAAEC,OAAOd,UAC8C6D,gEAAAA,OAAAA,EADvD,cAGA,MAEG,KAAA,EACHhD,EAAEC,OAAOd,UAAT,2YAUAxB,SAASC,cAAc,qBAAqBwF,MAAQJ,EACpD,MAEG,KAAA,EACA,KAAA,EACEF,IACH9C,EAAEC,OAAOd,UACgD6D,oEAAAA,OAAAA,EADzD,gBAGAC,EAAeI,GAAAA,OAAAA,WAAWJ,GAAa,GAAvC,MACAH,GAAe,GAKrBnF,SAASC,cAAc,eAAeuD,MAAMgC,MAAQF,EACpDjD,EAAEC,OAAOyB,kBAAkBE,SAGvB0B,EAAY,SAACC,EAAIP,GACfQ,IAAAA,EAAUD,EAAGtD,OAAOyB,kBAAkB0B,MAE5B,KAAZI,GAA8B,MAAZA,EACpBD,EAAGtD,OAAOd,UAAY6D,GAEE,IAAxBO,EAAGtD,OAAOC,UACNqD,EAAGtD,OAAOd,UAAYqE,EACtBD,EAAGtD,OAAOd,UACPW,cAAAA,OAAAA,OAAO0D,GAASnB,eAAe,SAHtC,UAM4B,IAAxBkB,EAAGtD,OAAOC,WACZM,EACE,qBACA,kCACA,aAMFiD,EAAgB,SAACzD,GACf0D,IAAAA,EAAQ/F,SAASC,cAAc,eAE/B+F,EAAgB,WACpB3D,EAAEC,OAAOyB,kBAAkBE,QAC3B5B,EAAEC,OAAOkB,MAAMyC,OAAf,iBACAhB,GAAY,GAKV,GAFJA,GAAY,GAEPc,EAAMN,MAAMnB,OACRW,OAAAA,EAGL5C,GAAuB,IAAvBA,EAAEC,OAAOC,WACPwD,GAAAA,EAAMN,MAAMnB,OAAS,GAAK,KAAKC,KAAKwB,EAAMN,OAGrC5C,OAFPmD,IAEOnD,EACL,sBACA,sEACA,cAGC,GAA2B,IAAvBR,EAAEC,OAAOC,WACdwD,GAAAA,EAAMN,MAAQpF,GAAU0F,EAAMN,MAAQnF,EAGjCuC,OAFPmD,IAEOnD,EACL,qBACgCxC,gCAAAA,OAAAA,EAAwBC,mBAAAA,OAAAA,GACxD,aAGC,CAAA,GAA2B,IAAvB+B,EAAEC,OAAOC,UAWX0C,OAAAA,EAVHc,GAAAA,EAAMN,MAAQ,EAGT5C,OAFPmD,IAEOnD,EACL,wBACA,gCACA,WAQFqD,EAAqB,SAAC7D,EAAGgD,GAGzB,GAFJS,EAAczD,IAET4C,EAKIU,OAJPtD,EAAEC,OAAOkB,MAAMyC,OAAS,OACxBf,EAAaZ,OAAS,EACtBa,GAAe,EAERQ,EAAUtD,EAAGgD,IAIxBnF,EAAKkC,iBAAiB,WAAY,SAACC,GAC3B8D,IAAAA,EAAa9D,EAAEC,OAAO8D,QAAQ,MAEhC,GAACD,EAAD,CAIE5D,IAAAA,EAAY4D,EAAW5D,UAIzB2C,GAFJA,EAAamB,KAAK9D,GAEd2C,EAAa,KAAO3C,EACfM,OAAAA,EACL,qBACA,gEACA,QACA,KAIEyD,IAAAA,EAAWjE,EAAEC,OAAOyC,UAE1BK,EAAc/C,EAAGiE,GAEXxC,IAAAA,EAAQzB,EAAEC,OAAOyB,kBAEvBD,EAAM1B,iBAAiB,OAAQ,WAC7B8D,EAAmB7D,EAAGiE,KAGxBxC,EAAM1B,iBAAiB,QAAS,SAACmE,GAChB,UAAXA,EAAGC,KACL1C,EAAM2C","file":"main.8650d817.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst header = document.querySelector('thead');\nconst body = document.querySelector('tbody');\nconst notifTimeout = 3000;\nconst lengthName = 4;\nconst ageMin = 18;\nconst ageMax = 90;\nconst employeeForm = document.createElement('form');\n\nemployeeForm.classList.add('new-employee-form');\n\nemployeeForm.insertAdjacentHTML('afterbegin', `\n    <label>Name:\n      <input type=\"text\" name=\"name\" data-qa=\"name\">\n    </label>\n    <label>Position:\n      <input type=\"text\" name=\"position\" data-qa=\"position\">\n    </label>\n    <label>Office:\n      <select name=\"office\" data-qa=\"office\">\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\">San Francisco</option>\n      </select>\n    </label>\n    <label>Age:\n      <input type=\"number\" name=\"age\" data-qa=\"age\">\n    </label>\n    <label>Salary:\n      <input type=\"number\" name=\"salary\" data-qa=\"salary\">\n    </label>\n    <button type=\"submit\">Save to table</button>\n`);\n\ndocument.body.append(employeeForm);\n\nlet cIndex = -1;\n\nheader.addEventListener('click', (e) => {\n  const target = e.target;\n  const index = target.cellIndex;\n\n  sortingTable(index, target.innerHTML, cIndex === index);\n\n  cIndex = (cIndex === index) ? -1 : index;\n});\n\nfunction sortingTable(index, nameColumn, directSorting) {\n  const sortTable = [...body.children];\n\n  sortTable.sort((first, second) => {\n    const a = first.children[index].innerHTML;\n    const b = second.children[index].innerHTML;\n\n    switch (nameColumn) {\n      case 'Name':\n      case 'Position':\n      case 'Office':\n        return a.localeCompare(b);\n\n      case 'Age':\n      case 'Salary':\n        return toNumber(a) - toNumber(b);\n    }\n  });\n\n  if (directSorting) {\n    sortTable.reverse();\n  }\n\n  body.append(...sortTable);\n};\n\nfunction toNumber(string) {\n  const res = string.includes('$')\n    ? string.slice(1).split(',').join('')\n    : string;\n\n  return Number(res);\n};\n\nbody.addEventListener('click', (e) => {\n  [...body.children].forEach(row => {\n    row.classList.remove('active');\n  });\n\n  e.target.parentElement.classList.add('active');\n});\n\nlet isValid = false;\n\nconst startNotification = (title, description, type,\n  possTop = 450, possRight = 275) => {\n  const mainBody = document.querySelector('body');\n  const blockNot = document.createElement('div');\n  const headerNot = document.createElement('h2');\n  const textNot = document.createElement('p');\n\n  textNot.innerHTML = description;\n  headerNot.innerHTML = title;\n  blockNot.classList.add('notification', type);\n  blockNot.setAttribute('data-qa', 'notification');\n  headerNot.classList.add('header');\n\n  blockNot.append(headerNot, textNot);\n  mainBody.append(blockNot);\n\n  headerNot.style.fontSize = '18px';\n  blockNot.style.top = `${possTop}px`;\n  blockNot.style.right = `${possRight}px`;\n\n  setTimeout(() => blockNot.remove(), notifTimeout);\n};\n\nconst onFocusInvalidForm = (field) => {\n  employeeForm.children[field].firstElementChild\n    .addEventListener('focus', (e) => {\n      e.target.style.outlineColor = '#F00';\n    });\n\n  employeeForm.children[field].focus();\n};\n\nconst validateForm = (data) => {\n  if (data.get('name').trim().length < lengthName\n    || /\\d/.test(data.get('name'))) {\n    onFocusInvalidForm(0);\n\n    startNotification(\n      'Name is not correct',\n      'Your name must have at least 4 letters and must not include numbers',\n      'error',\n    );\n\n    isValid = false;\n  } else if (data.get('office') === null) {\n    onFocusInvalidForm(2);\n\n    startNotification(\n      'Office is not correct',\n      'Please, select an option',\n      'error',\n    );\n\n    isValid = false;\n  } else if (data.get('position').trim() === '') {\n    onFocusInvalidForm(1);\n\n    startNotification(\n      'Position is not correct',\n      'Position must not be empty',\n      'error',\n    );\n\n    isValid = false;\n  } else if (data.get('age') < ageMin || data.get('age') > ageMax) {\n    onFocusInvalidForm(3);\n\n    startNotification(\n      'Age is not correct',\n      `Your age cannot be less than ${ageMin} and more than ${ageMax}`,\n      'error',\n    );\n\n    isValid = false;\n  } else if (data.get('salary') === '' || data.get('salary') <= 0) {\n    onFocusInvalidForm(4);\n\n    startNotification(\n      'Salary is not correct',\n      'Salary must be greater than 0',\n      'error',\n    );\n\n    isValid = false;\n  } else {\n    isValid = true;\n  }\n};\n\nemployeeForm.addEventListener('submit', (e) => {\n  const data = new FormData(employeeForm);\n  const numberToSalary = `$${Number(data.get('salary'))\n    .toLocaleString('en-US')}`;\n\n  e.preventDefault();\n  validateForm(data);\n\n  if (!isValid) {\n    return;\n  }\n\n  const newRow = body.insertRow();\n\n  newRow.insertCell(0).innerText = data.get('name');\n  newRow.insertCell(1).innerText = data.get('position');\n  newRow.insertCell(2).innerText = data.get('office');\n  newRow.insertCell(3).innerText = data.get('age');\n  newRow.insertCell(4).innerText = numberToSalary;\n\n  employeeForm.reset();\n\n  startNotification(\n    'Validation success',\n    'Employee was successfully added',\n    'success',\n  );\n});\n\nconst indexCompare = [];\nlet validCell;\nlet isThereInput = false;\n\nconst changeOnInput = (e, prev) => {\n  let cellWidth = getComputedStyle(e.target).width;\n\n  switch (e.target.cellIndex) {\n    case 0:\n    case 1:\n      e.target.innerHTML = `\n        <input type=\"text\" class=\"cell-input\" placeholder=\"${prev}\">\n      `;\n      break;\n\n    case 2:\n      e.target.innerHTML = `\n        <select class=\"cell-input\">\n          <option value=\"Tokyo\">Tokyo</option>\n          <option value=\"Singapore\">Singapore</option>\n          <option value=\"London\">London</option>\n          <option value=\"New York\">New York</option>\n          <option value=\"Edinburgh\">Edinburgh</option>\n          <option value=\"San Francisco\">San Francisco</option>\n        </select>\n      `;\n      document.querySelector('select.cell-input').value = prev;\n      break;\n\n    case 3:\n    case 4:\n      if (!isThereInput) {\n        e.target.innerHTML = `\n          <input type=\"number\" class=\"cell-input\" placeholder=\"${prev}\">\n        `;\n        cellWidth = `${parseFloat(cellWidth) + 30}px`;\n        isThereInput = true;\n      }\n      break;\n  }\n\n  document.querySelector('.cell-input').style.width = cellWidth;\n  e.target.firstElementChild.focus();\n};\n\nconst editCells = (el, prev) => {\n  const newText = el.target.firstElementChild.value;\n\n  if (newText === '' || newText === '0') {\n    el.target.innerHTML = prev;\n  } else {\n    el.target.cellIndex !== 4\n      ? el.target.innerHTML = newText\n      : el.target.innerHTML = `\n        $${Number(newText).toLocaleString('en-US')}\n    `;\n\n    if (el.target.cellIndex !== 2) {\n      startNotification(\n        'Validation success',\n        'Employee was successfully added',\n        'success',\n      );\n    }\n  }\n};\n\nconst validateCells = (e) => {\n  const input = document.querySelector('.cell-input');\n\n  const getValidCells = () => {\n    e.target.firstElementChild.focus();\n    e.target.style.border = `2px solid #F00`;\n    validCell = true;\n  };\n\n  validCell = false;\n\n  if (!input.value.length) {\n    return validCell;\n  }\n\n  if (e.target.cellIndex === 0) {\n    if (input.value.length < 4 || /\\d/.test(input.value)) {\n      getValidCells();\n\n      return startNotification(\n        'Name is not correct',\n        'Your name must have at least 4 letters and must not include numbers',\n        'error',\n      );\n    }\n  } else if (e.target.cellIndex === 3) {\n    if (input.value < ageMin || input.value > ageMax) {\n      getValidCells();\n\n      return startNotification(\n        'Age is not correct',\n        `Your age cannot be less than ${ageMin} and more than ${ageMax}`,\n        'error',\n      );\n    }\n  } else if (e.target.cellIndex === 4) {\n    if (input.value < 0) {\n      getValidCells();\n\n      return startNotification(\n        'Salary is not correct',\n        'Salary must be greater than 0',\n        'error',\n      );\n    }\n  } else {\n    return validCell;\n  }\n};\n\nconst saveChangesOnTable = (e, prev) => {\n  validateCells(e);\n\n  if (!validCell) {\n    e.target.style.border = 'none';\n    indexCompare.length = 0;\n    isThereInput = false;\n\n    return editCells(e, prev);\n  }\n};\n\nbody.addEventListener('dblclick', (e) => {\n  const targetCell = e.target.closest('td');\n\n  if (!targetCell) {\n    return;\n  }\n\n  const cellIndex = targetCell.cellIndex;\n\n  indexCompare.push(cellIndex);\n\n  if (indexCompare[0] !== cellIndex) {\n    return startNotification(\n      'Unfinished changes',\n      'You cannot change another cell until this one is not finished',\n      'error',\n      580,\n    );\n  }\n\n  const prevText = e.target.innerText;\n\n  changeOnInput(e, prevText);\n\n  const field = e.target.firstElementChild;\n\n  field.addEventListener('blur', () => {\n    saveChangesOnTable(e, prevText);\n  });\n\n  field.addEventListener('keyup', (ev) => {\n    if (ev.key === 'Enter') {\n      field.blur();\n    }\n  });\n});\n"]}